user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    keepalive_timeout  65;

    server {
        listen       80;
        server_name  localhost;

        # Public area
        location / {
            root   /usr/share/nginx/html;
            autoindex on;
            add_header Accept-Ranges bytes;
        }

        # Basic Auth protected area
        location /secured/basic/ {
            alias /usr/share/nginx/html/secured/basic/;
            autoindex on;
            add_header Accept-Ranges bytes;

            auth_basic "Secured Basic Test Area";
            auth_basic_user_file /etc/nginx/.htpasswd;
        }

        # Digest Auth protected area
        location /secured/digest/ {
            alias /usr/share/nginx/html/secured/digest/;
            autoindex on;
            add_header Accept-Ranges bytes;

            auth_digest "Secured Digest Test Area";
            auth_digest_user_file /etc/nginx/.htpasswd.digest;
        }

        # Bearer Token protected area
        location /secured/bearer/ {
            alias /usr/share/nginx/html/secured/bearer/;
            autoindex on;
            add_header Accept-Ranges bytes;

            # Set expected Bearer token
            set $expected_bearer_token "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ0ZXN0LXVzZXIiLCJuYW1lIjoiVGVzdCBVc2VyIiwiaWF0IjoxNTE2MjM5MDIyfQ.tHN1PJiNw9UWRcmRGjXBc5rNWfr3Y9Py3C5dPNMOFzg";

            # Check authorization header
            if ($http_authorization ~ "^Bearer (.+)$") {
                set $auth_token $1;
            }

            # If no auth token or it doesn't match expected token, return 401
            if ($auth_token != $expected_bearer_token) {
                return 401;
            }
        }

        # API Key protected area
        location /secured/apikey/ {
            alias /usr/share/nginx/html/secured/apikey/;
            autoindex on;
            add_header Accept-Ranges bytes;

            # Set expected API key
            set $expected_api_key "api-key-test-value-12345";

            # If X-API-Key header doesn't match expected key, return 401
            if ($http_x_api_key != $expected_api_key) {
                return 401;
            }
        }

        # Custom Header protected area
        location /secured/custom/ {
            alias /usr/share/nginx/html/secured/custom/;
            autoindex on;
            add_header Accept-Ranges bytes;

            # Set expected custom header name and value
            set $custom_header_name "X-Custom-Auth";
            set $expected_custom_header_value "custom-auth-test-value-67890";

            # Check if custom header matches expected value
            set $auth_header "";

            # Get the header value dynamically
            if ($http_x_custom_auth) {
                set $auth_header $http_x_custom_auth;
            }

            # If header doesn't match expected value, return 401
            if ($auth_header != $expected_custom_header_value) {
                return 401;
            }
        }
    }
}
